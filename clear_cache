#!/bin/sh

source $HOME/twenga/tools/master_synchro.cfg
source $HOME/.bash_twenga

if ( [ "$#" != "1" ] && [ "$#" != "2" ] ); then
	echo "Usage: `basename $0` geozone|server [scope]";
	exit 1;
fi

scope=$2
if [ "$scope" = "" ]; then
	scope="global"
fi

if [ "$scope" = "global" ]; then
	scope="adodb,smarty,search"
fi

scope_local=""

for scope_item in `echo $scope | tr ',' ' '`; do
	if ( [ "$scope_item" != "search" ] && [ "$scope_item" != "" ] ); then
		scope_local="${scope_local},$scope_item"
	fi
done

scope_local=`echo $scope_local | cut -c 2-`

gz=$1
geozone=`echo $gz| awk '{print toupper($1)}'`

TMPFILE="/home/tmp/.clear_cache_${gz}_-$RANDOM"

WEBSITES_FRONT=`declare -p "WEBSITES_FRONT_$geozone" 2>/dev/null | awk -F '"' '{print $2}'`

if [ "$WEBSITES_FRONT" = "" ]; then # L'argument n'est pas une geozone mais un server
	mode="server"
	server=$1
	all_gz=`getAllGeozoneForServer $gz`
	for zgz in $all_gz; do
		zgz_upper=`echo $zgz| awk '{print toupper($1)}'`	
		zWEBSITES_FRONT=`declare -p "WEBSITES_FRONT_$zgz_upper" 2>/dev/null | awk -F '"' '{print $2}'`
		WEBSITES_FRONT="$WEBSITES_FRONT $zWEBSITES_FRONT"
	done
fi

if [ "$WEBSITES_FRONT" = "" ]; then
    echo "Unable to get WEBSITES_FRONT." 1>&2
	exit 1;
fi

if [ "$INTERNAL_USER" = "" ]; then
    echo "Unable to get INTERNAL_USER." 1>&2
	exit 1;
fi
if [ "$INTERNAL_PASS" = "" ]; then
    echo "Unable to get INTERNAL_PASS." 1>&2
	exit 1;
fi

first_global_call=1

function runCommand
{
	# Le clear de composants centralisÃ©s ne doit etre fait qu'un seule fois
	zscope="$scope_local"
	if ( [ "$wwwname" = "www" ] && [ "$first_global_call" = "1" ] && [ "$mode" != "server" ] ); then
		zscope="$scope"
		first_global_call=0
		$HOME/twenga/tools/search_query $gz "INFO/clear_search_cache.html"
	fi

	if [ "$zscope" = "" ]; then
		return;
	fi
	
	if [ "$zscope" = "opcode" ]; then
		wget --user=$INTERNAL_USER --password=$INTERNAL_PASS --no-cookies --header "Host: ${website}" "http://${server}/protected/apc.php?SCOPE=A&SORT1=H&SORT2=D&COUNT=20&CC=1&OB=2" -o /dev/null -O $TMPFILE 2>/dev/null 1>&2
		rc=$?
		if [ "$rc" = "0" ]; then
			echo "Clearing cache on ${server} for ${website} (scope: $zscope) OK..."
		else
			echo "Clearing cache on ${server} for ${website} (scope: $zscope) KO..." 1>&2
		fi
	else
		wget --user=$INTERNAL_USER --password=$INTERNAL_PASS --no-cookies --header "Host: ${website}" "http://${server}/protected/clear_cache.php?scope=$zscope" -o /dev/null -O $TMPFILE 2>/dev/null 1>&2
		if [ "`grep KO $TMPFILE`" != "" ]; then
			echo "Clearing cache on ${server} for ${website} (scope: $zscope) KO..." 1>&2
			cat $TMPFILE 1>&2
			echo "." 1>&2
		else
			echo "Clearing cache on ${server} for ${website} (scope: $zscope) OK..."
		fi
	fi
}

if [ "$mode" = "server" ]; then
	servertype=`getServerType $server`
	for website in $WEBSITES_FRONT; do
		wwwname=`echo $website | cut -d'.' -f1`
		if ( [ "$wwwname" = "internal" ] || [ "$wwwname" = "qa" ] || [ "$wwwname" = "bct" ] ); then
			if [ "$servertype" = "internal" ]; then
				if [ "`getInternalServer $wwwname`" = "$server" ]; then
					runCommand
				fi
			fi
		else
			if [ "$servertype" = "www" ]; then
				runCommand
			fi
		fi
	done
	exit 0;
fi

# Mode Geozone
for website in $WEBSITES_FRONT; do
	wwwname=`echo $website | cut -d'.' -f1`
    if ( [ "$wwwname" = "internal" ] || [ "$wwwname" = "qa" ] || [ "$wwwname" = "bct" ] ); then
		isInternal=1
		servers=`getInternalServer $wwwname`
	else
	    isInternal=0
		servers="`getPhpWeb $gz`"
	fi
	for server in $servers; do
			runCommand
	done
done

if [ "$gz" = "cn" ]; then
	echo -n "Clearing Squid Cache..."
	/home/prod/twenga/tools/cn_squid_purge 1>>$HOME/logs/cn_clear_squid.out
	echo "done."
fi

rm -f $TMPFILE 2>/dev/null

